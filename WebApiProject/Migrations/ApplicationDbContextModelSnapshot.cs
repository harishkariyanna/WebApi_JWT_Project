// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiProject.Data;

#nullable disable

namespace WebApiProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("CurrentMembers")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 20,
                            CurrentMembers = 0,
                            Description = "Yoga sessions for flexibility",
                            Name = "Yoga"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 15,
                            CurrentMembers = 0,
                            Description = "Strength training",
                            Name = "Weightlifting"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 25,
                            CurrentMembers = 0,
                            Description = "High-intensity cardio sessions",
                            Name = "Cardio"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 18,
                            CurrentMembers = 0,
                            Description = "High-intensity functional training",
                            Name = "CrossFit"
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 12,
                            CurrentMembers = 0,
                            Description = "Core strength and posture improvement",
                            Name = "Pilates"
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 30,
                            CurrentMembers = 0,
                            Description = "Dance-based cardio workout",
                            Name = "Zumba"
                        });
                });

            modelBuilder.Entity("GymMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Goals")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("JoinedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TrainerId");

                    b.ToTable("GymMembers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 3,
                            Email = "arjun.mehta@example.com",
                            Goals = "Lose weight",
                            JoinedDate = new DateTime(2025, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Arjun Mehta",
                            Phone = "9876543210",
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Email = "priya.sharma@example.com",
                            Goals = "Increase flexibility",
                            JoinedDate = new DateTime(2025, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Priya Sharma",
                            Phone = "9876501234",
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Email = "rohit.desai@example.com",
                            Goals = "Build muscle",
                            JoinedDate = new DateTime(2025, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rohit Desai",
                            Phone = "9876512345",
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Email = "neha.verma@example.com",
                            Goals = "Improve stamina",
                            JoinedDate = new DateTime(2025, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Neha Verma",
                            Phone = "9876523456",
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Email = "karan.malhotra@example.com",
                            Goals = "Reduce stress",
                            JoinedDate = new DateTime(2025, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Karan Malhotra",
                            Phone = "9876534567",
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Email = "sunita.nair@example.com",
                            Goals = "Gain muscle",
                            JoinedDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sunita Nair",
                            Phone = "9876545678",
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Email = "rajeev.kumar@example.com",
                            Goals = "Maintain fitness",
                            JoinedDate = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rajeev Kumar",
                            Phone = "9876556789",
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            Email = "anita.shetty@example.com",
                            Goals = "Lose belly fat",
                            JoinedDate = new DateTime(2025, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Anita Shetty",
                            Phone = "9876567890",
                            TrainerId = 1
                        });
                });

            modelBuilder.Entity("Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Specialization")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Trainers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Email = "ramesh.kumar@example.com",
                            Experience = 0,
                            Name = "Ramesh Kumar",
                            Specialization = "Yoga"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Email = "anjali.singh@example.com",
                            Experience = 0,
                            Name = "Anjali Singh",
                            Specialization = "Weightlifting"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Email = "vikram.patel@example.com",
                            Experience = 0,
                            Name = "Vikram Patel",
                            Specialization = "Cardio"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Email = "sandeep.rao@example.com",
                            Experience = 0,
                            Name = "Sandeep Rao",
                            Specialization = "CrossFit"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Email = "meera.joshi@example.com",
                            Experience = 0,
                            Name = "Meera Joshi",
                            Specialization = "Pilates"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            Email = "pooja.nair@example.com",
                            Experience = 0,
                            Name = "Pooja Nair",
                            Specialization = "Zumba"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Email = "amit.sharma@example.com",
                            Experience = 0,
                            Name = "Amit Sharma",
                            Specialization = "Strength & Conditioning"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            Email = "divya.kapoor@example.com",
                            Experience = 0,
                            Name = "Divya Kapoor",
                            Specialization = "Advanced Yoga"
                        });
                });

            modelBuilder.Entity("WebApiProject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin1@example.com",
                            Password = "admin123",
                            Role = "Admin",
                            Token = "",
                            Username = "admin1"
                        },
                        new
                        {
                            Id = 2,
                            Email = "user1@example.com",
                            Password = "user123",
                            Role = "User",
                            Token = "",
                            Username = "user1"
                        },
                        new
                        {
                            Id = 3,
                            Email = "user2@example.com",
                            Password = "user123",
                            Role = "User",
                            Token = "",
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("GymMember", b =>
                {
                    b.HasOne("Category", "Category")
                        .WithMany("GymMembers")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Trainer", "Trainer")
                        .WithMany("GymMembers")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Trainer", b =>
                {
                    b.HasOne("Category", "Category")
                        .WithMany("Trainers")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Navigation("GymMembers");

                    b.Navigation("Trainers");
                });

            modelBuilder.Entity("Trainer", b =>
                {
                    b.Navigation("GymMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
